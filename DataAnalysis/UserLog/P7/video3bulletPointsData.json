{
  "buttonStats": {
    "theme_count": 1,
    "expand_count": 1,
    "time_count": 1
  },
  "pauseCount": 2,
  "forwardCount": 1,
  "reverseCount": 0,
  "summary_t": "Alison Parrish, a poet, programmer, and game designer, and faculty member at New York University, discusses her experiments with vector representations of language in poetry. She introduces the concept of vector representations for those unfamiliar with it and explains how they can be applied to semantics and phonetics in language. Parrish shares examples of how vector arithmetic can reveal semantic relationships between words and demonstrates how she uses these techniques to generate poetry that emphasizes the aesthetic properties of language rather than conventional meaning. She also describes her work on creating a continuous vector space for the phonetics of words, allowing for the exploration of how words sound and feel. Throughout the talk, Parrish reads examples of her computer-generated poetry, including works that blend texts like Mary Shelley's \"Frankenstein\" with the Bible, and a book of poems created from a random walk through the phonetic similarity space of lines from Project Gutenberg. Her work aims to provide new ways of composing text that go beyond traditional typing, incorporating gesture and body movements, and exploring the continuous nature of language representation.",
  "summary_p": "Word vectors function similarly to color vectors in representing concepts within a space, where RGB values are used to denote specific colors, akin to naming colors. By calculating the mean value of different color names or vectors, one can find the average color, which involves adding vectors together and then finding the mean value to determine a resultant color. Manipulating the direction and magnitude of these vectors through addition or subtraction allows for the creation of new vectors, representing the blending or differentiation of colors. For example, mixing red and blue vectors finds blue in vector space, while combining blue and green yields cyan, and averaging black and white creates grey.",
  "url": "www.youtube.com/watch?v=L3D0JEA1Jdc",
  "editHistory": [
    {
      "point": "Word vectors -> example with color vector",
      "fraction_transcript": [],
      "utc_time": 1710529080349,
      "note_taking_time": 340088.37,
      "edit": [
        [
          {
            "e_point": "Word vectors -> example with color vector",
            "e_time": 1710529080349
          }
        ],
        [
          {
            "e_point": "Word vectors represent words in a space, similar to how a color vector can represent the concept of color.",
            "e_time": 1710529305534
          }
        ]
      ]
    },
    {
      "point": "RGB points for each - which color name similar color.",
      "fraction_transcript": [],
      "utc_time": 1710529097318,
      "note_taking_time": 16969,
      "edit": [
        [
          {
            "e_point": "RGB points for each - which color name similar color.",
            "e_time": 1710529097318
          }
        ],
        [
          {
            "e_point": "RGB values correspond to specific colors, with each value indicating a color similar to the color name.",
            "e_time": 1710529305534
          }
        ]
      ]
    },
    {
      "point": "Find the color name's average",
      "fraction_transcript": [],
      "utc_time": 1710529109736,
      "note_taking_time": 12418,
      "edit": [
        [
          {
            "e_point": "Find the color name's average",
            "e_time": 1710529109736
          }
        ],
        [
          {
            "e_point": "Find the average -> color names\n: calculate the mean value of different color names.",
            "e_time": 1710529305534
          }
        ]
      ]
    },
    {
      "point": "used python",
      "fraction_transcript": [],
      "utc_time": 1710529120119,
      "note_taking_time": 10383,
      "edit": [
        [
          {
            "e_point": "used python",
            "e_time": 1710529120119
          }
        ],
        [
          {
            "e_point": "I'm sorry, but without a transcript or context, I cannot expand on the keypoint \"used python.\" Please provide the relevant transcript or additional details for me to assist you effectively.",
            "e_time": 1710529305534
          }
        ]
      ]
    },
    {
      "point": "subtracting /adding vector",
      "fraction_transcript": [],
      "utc_time": 1710529134643,
      "note_taking_time": 14524,
      "edit": [
        [
          {
            "e_point": "subtracting /adding vector",
            "e_time": 1710529134643
          }
        ],
        [
          {
            "e_point": "Subtracting/adding vectors involves manipulating their direction and magnitude to get a resultant vector.",
            "e_time": 1710529305534
          }
        ]
      ]
    },
    {
      "point": "find the average / adding vectors together",
      "fraction_transcript": [],
      "utc_time": 1710529146043,
      "note_taking_time": 11400,
      "edit": [
        [
          {
            "e_point": "find the average / adding vectors together",
            "e_time": 1710529146043
          }
        ],
        [
          {
            "e_point": "Average of vectors -> add vectors together -> find mean value.",
            "e_time": 1710529305534
          }
        ]
      ]
    },
    {
      "point": "closest color name in RGB - ucline distance in vector space : find the neighbor color",
      "fraction_transcript": [],
      "utc_time": 1710529176078,
      "note_taking_time": 30035,
      "edit": [
        [
          {
            "e_point": "closest color name in RGB - ucline distance in vector space : find the neighbor color",
            "e_time": 1710529176078
          }
        ],
        [
          {
            "e_point": "RGB color space -> find closest color by measuring the straight-line distance in vector space.",
            "e_time": 1710529305534
          }
        ]
      ]
    },
    {
      "point": "ex. give word -> what is the closest word",
      "fraction_transcript": [],
      "utc_time": 1710529197947,
      "note_taking_time": 21869,
      "edit": [
        [
          {
            "e_point": "ex. give word -> what is the closest word",
            "e_time": 1710529197947
          }
        ],
        [
          {
            "e_point": "Please provide the transcript related to the keypoint so I can assist you in creating a note.",
            "e_time": 1710529305534
          }
        ]
      ]
    },
    {
      "point": "red -> all similar reds",
      "fraction_transcript": [],
      "utc_time": 1710529203764,
      "note_taking_time": 5817,
      "edit": [
        [
          {
            "e_point": "red -> all similar reds",
            "e_time": 1710529203764
          }
        ],
        [
          {
            "e_point": "Red color categorization includes various shades that are perceived as similar.",
            "e_time": 1710529305534
          }
        ]
      ]
    },
    {
      "point": "ex 2. with RGB",
      "fraction_transcript": [],
      "utc_time": 1710529217252,
      "note_taking_time": 13488,
      "edit": [
        [
          {
            "e_point": "ex 2. with RGB",
            "e_time": 1710529217252
          }
        ],
        [
          {
            "e_point": "It seems like there is no transcript provided to extract context from. Could you please provide the transcript related to the keypoint \"ex 2. with RGB\"? Without the transcript, I'm unable to expand the keypoint into a note.",
            "e_time": 1710529305534
          }
        ],
        [
          {
            "e_point": "As there is no keypoint or relevant transcript provided, I'm unable to create a note. Please provide a keypoint and corresponding transcript for me to assist you.",
            "e_time": 1710529477849
          }
        ]
      ]
    },
    {
      "point": "#### operate on language and numbers",
      "fraction_transcript": [],
      "utc_time": 1710529231262,
      "note_taking_time": 14010,
      "edit": [
        [
          {
            "e_point": "#### operate on language and numbers",
            "e_time": 1710529231262
          }
        ],
        [
          {
            "e_point": "I'm sorry, but you have not provided a transcript for me to reference in order to expand the keypoint into a note. Could you please provide the relevant transcript?",
            "e_time": 1710529305534
          }
        ]
      ]
    },
    {
      "point": "ex. purple -red -> it finds blue in vector space",
      "fraction_transcript": [],
      "utc_time": 1710529242750,
      "note_taking_time": 11488,
      "edit": [
        [
          {
            "e_point": "ex. purple -red -> it finds blue in vector space",
            "e_time": 1710529242750
          }
        ],
        [
          {
            "e_point": "Purple and red combine to locate blue within the vector space.",
            "e_time": 1710529305534
          },
          {
            "e_point": "ex. purple - red -> it finds blue in vector space",
            "e_time": 1710529413404
          }
        ]
      ]
    },
    {
      "point": "ex2. add blue to green it finds cyan",
      "fraction_transcript": [],
      "utc_time": 1710529255488,
      "note_taking_time": 12738,
      "edit": [
        [
          {
            "e_point": "ex2. add blue to green it finds cyan",
            "e_time": 1710529255488
          }
        ],
        [
          {
            "e_point": "Adding blue to green results in the color cyan.",
            "e_time": 1710529305534
          }
        ]
      ]
    },
    {
      "point": "ex3. average black and white and generate grey",
      "fraction_transcript": [],
      "utc_time": 1710529272977,
      "note_taking_time": 17489,
      "edit": [
        [
          {
            "e_point": "ex3. average black and white and generate grey",
            "e_time": 1710529272977
          }
        ],
        [
          {
            "e_point": "Average black & white -> mix to create grey.",
            "e_time": 1710529305534
          }
        ]
      ]
    }
  ]
}